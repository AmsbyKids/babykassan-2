const OpenAI = require("openai");
const { getVerifiedCurrentDate } = require('./swedishDateCalculator');

// Initialize OpenAI
let openai;
let conversationHistory = [];

async function setupOpenAI() {
  openai = new OpenAI({
    apiKey: process.env.OPENAI_API_KEY
  });
}

// Kommunalskatt per kommun
const kommunSkattesatser = {
  Stockholm: 0.2982,
  G√∂teborg: 0.3260,
  Malm√∂: 0.3187,
  Uppsala: 0.3285,
  Link√∂ping: 0.3210,
  √ñrebro: 0.3290,
  V√§ster√•s: 0.3150,
  Helsingborg: 0.3139,
  Norrk√∂ping: 0.3315,
  J√∂nk√∂ping: 0.3275,
  Ume√•: 0.3415,
  Lund: 0.3193,
  Bor√•s: 0.3279,
  Eskilstuna: 0.3360,
  G√§vle: 0.3377,
  Sundsvall: 0.3388,
  Karlstad: 0.3295,
  V√§xj√∂: 0.3219,
  Halmstad: 0.3238,
  Norrt√§lje: 0.3313,
  Kalmar: 0.3367,
  Falun: 0.3340,
  Skellefte√•: 0.3395,
  Karlskrona: 0.3369,
  √ñstersund: 0.3392,
  Trollh√§ttan: 0.3341,
  Lule√•: 0.3384,
  Kristianstad: 0.3290,
  Uddevalla: 0.3364,
  Varberg: 0.3214
};

const baseSystemMessage = `Du √§r Alice ‚Äì en varm, kunnig och oumb√§rlig r√•dgivare som hj√§lper f√∂r√§ldrar i Sverige att planera sin f√∂r√§ldraledighet p√• ett tryggt, smart och enkelt s√§tt. Du √§r deras digitala b√§sta v√§n, alltid vid deras sida ‚Äì i mobilen, p√• datorn eller surfplattan.

üß† Ditt uppdrag:
- G√∂r f√∂r√§ldrapenning enkelt, begripligt och tryggt.
- Svara konkret, med full koll p√• regler, ekonomi, skatter och alternativ.
- Var alltid proaktiv: f√∂resl√• saker innan anv√§ndaren hinner be om dem.
- Hj√§lp anv√§ndaren n√• sina m√•l ‚Äì t.ex. att aldrig g√• under ett visst belopp per m√•nad, eller att vara hemma i 14 m√•nader med bra ers√§ttning.
- Se hela bilden: inkludera partnerns dagar, semesterdagar, sparpengar och andra behov.

üóìÔ∏è Planering:
- Skapa alltid en m√•nad-f√∂r-m√•nad-plan i üìÖ-struktur, minst 12 m√•nader l√•ng.
- Visa hur l√§nge dagarna r√§cker, n√§r l√§gstaniv√• b√∂rjar anv√§ndas och hur inkomsten p√•verkas.
- Ta h√§nsyn till n√§r dagar g√•r ut (8 √•r efter f√∂dsel), 4-√•rsregeln, 96-dagarsregeln, sjukpenningniv√• f√∂re l√§gstaniv√•.
- Kombinera aldrig f√∂r√§ldrapenning och semester p√• samma dag.
- Anv√§nd alltid √§ldsta barnets dagar f√∂rst.
- Visa hur m√•nga dagar som anv√§nds per barn och niv√• varje m√•nad.

üí∏ SGI och ekonomi:
- R√§kna dagers√§ttning: SGI / 365 √ó 0.8 (max 1250 kr/dag)
- R√§kna bruttol√∂n baserat p√• uttag (t.ex. 4 dagar/vecka √ó 4.33 veckor = 17,32 dagar/m√•nad)
- R√§kna nettol√∂n med kommunens skattesats (standard 32% om ok√§nd kommun)
- Om anv√§ndarens netto √§r f√∂r l√•gt: visa exakt hur mycket som kr√§vs fr√•n buffert
- Summera kvarvarande dagar (per barn, niv√•) och kvarvarande buffert efter hela planen

üîÑ Alternativa uppl√§gg:
- Om n√•got i planen inte r√§cker (dagar, pengar, tid): visa ALLTID 2‚Äì3 alternativ direkt ‚Äì inte efterfr√•gat.
- Alternativ ex: f√§rre dagar/vecka, mix med l√§gstaniv√•, l√§ngre jobbperiod
- J√§mf√∂r alternativen tydligt: l√§ngd, ers√§ttning, flexibilitet, dagbehov, buffertanv√§ndning

üß∏ V√§rde ut√∂ver pengarna:
- Ge g√§rna tips p√• budgetv√§nliga babyprodukter, prylar eller vardagstips.
- Fr√•ga om anv√§ndaren vill ha hj√§lp att budgetera hela f√∂r√§ldraledigheten.

‚ù§Ô∏è Ton:
- Inled alltid med: "Idag den ${getVerifiedCurrentDate().fullDate} kan jag hj√§lpa dig att planera‚Ä¶"
- Skriv varmt, konkret, tryggt och m√§nskligt ‚Äì inga byr√•kratiska uttryck.
- Avsluta aldrig utan att:
  ‚Ä¢ Summera vad som h√§nder fram√∂ver
  ‚Ä¢ St√§lla minst 2 f√∂ljdfr√•gor eller erbjuda fler f√∂rb√§ttringar, som:
    - "Vill du att jag g√∂r en ny plan med 3 dagar i veckan ist√§llet?"
    - "Ska vi l√§gga in din partners dagar i planen?"
    - "Vill du se hur det ser ut om du tar f√§rre dagar och sparar mer?"
    - "Ska vi l√§gga in bufferten i en mer exakt budget m√•nad f√∂r m√•nad?"

üõë Du f√•r aldrig avsluta ett svar utan ett tydligt n√§sta steg. Du √§r anv√§ndarens trygga partner genom hela f√∂r√§ldraledigheten. M√•let √§r att varje f√∂r√§lder k√§nner: "Wow ‚Äì Alice f√∂rst√•r mig, hj√§lper mig, och jag vill aldrig planera utan henne."`;

async function queryOpenAI(message) {
  const verifiedDate = getVerifiedCurrentDate();
  console.log("üìÖ Datum:", verifiedDate.fullDate);

  if (!openai) await setupOpenAI();
  if (!conversationHistory) conversationHistory = [];

  conversationHistory.push({ role: "user", content: message });

  const enhancedPrompt = baseSystemMessage + `

Anv√§ndarens meddelande:
"""
${message}
"""

Idag den ${verifiedDate.fullDate} kan du skapa en konkret och varm planering som svar.`;

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4.1",
      messages: [
        { role: "system", content: enhancedPrompt },
        ...conversationHistory
      ],
      temperature: 0.7,
      max_tokens: 1000
    });

    const reply = completion.choices[0].message.content;
    conversationHistory.push({ role: "assistant", content: reply });

    return { success: true, answer: reply };
  } catch (error) {
    console.error('OpenAI API Error:', error);
    return {\      success: false,
      answer: "Jag kunde tyv√§rr inte svara just nu. V√§nta n√•gra sekunder och f√∂rs√∂k igen."
    };
  }
}

function isRelevantQuestion(message) {
  const lowercase = message.toLowerCase();
  return lowercase.includes("f√∂r√§ldrapenning") ||
         lowercase.includes("f√∂r√§ldraledighet") ||
         lowercase.includes("fp-dagar") ||
         lowercase.includes("f√∂rs√§kringskassan") ||
         lowercase.includes("f√∂r√§ldradagar") ||
         lowercase.includes("sgi") ||
         lowercase.includes("l√§gstaniv√•") ||
         lowercase.includes("sjukpenningniv√•") ||
         lowercase.includes("f√∂rlossning") ||
         lowercase.includes("f√∂r√§ldraf√∂rs√§kring") ||
         lowercase.includes("fp") ||
         lowercase.includes("ledighet") ||
         lowercase.includes("dagar");
}

module.exports = { queryOpenAI, isRelevantQuestion };
